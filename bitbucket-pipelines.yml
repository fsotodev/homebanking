image: node:12-alpine3.12 # utilizar misma imagen de docker que en el dockerfile

clone:
  depth: full

definitions:
  options:
    docker: true
  services:
    docker:
      memory: 4096
  caches:
    sonar: ~/.sonar/cache
  steps:
    - step: &build-test-sonarcloud
        name: Build, test and analyze on SonarCloud
        caches:
          - node
          - sonar
        size: 2x 
        script:
          - source JenkinsParams
          - export VERSION=$(node -p "require('./package.json').version")
          - export REPOSITORY_NAME=$(echo $BITBUCKET_REPO_FULL_NAME |  sed 's|.*/||')
          # - npm install --quiet
          # - npm run test -- --code-coverage --no-watch --no-progress --browsers=ChromeHeadlessNoSandbox
          - pipe: sonarsource/sonarcloud-scan:1.4.0
            variables:
              EXTRA_ARGS: >
                -Dsonar.projectKey=\"${BITBUCKET_PROJECT_KEY}_${REPOSITORY_NAME}\" 
                -Dsonar.projectName=\"${BITBUCKET_PROJECT_KEY}_${REPOSITORY_NAME}\" 
                -Dsonar.projectVersion=\"$VERSION\" 
                -Dsonar.sources=\"$SCAN_SOURCE\" 
                -Dsonar.exclusions=\"$SCAN_EXCLUDE_FILES\"
              # -Dsonar.typescript.lcov.reportPaths=\"$SCAN_COVERAGE_REPORT\"
    - step: &check-quality-gate-sonarcloud
        name: Check the Quality Gate on SonarCloud
        caches:
          - sonar
        size: 2x
        script:
          - pipe: sonarsource/sonarcloud-quality-gate:0.1.6

pipelines:
  custom: # Pipelines that can only be triggered manually
    sonar:
      - step: *build-test-sonarcloud
      - step: *check-quality-gate-sonarcloud
  branches:
    development:
      - step: *build-test-sonarcloud
      - step: *check-quality-gate-sonarcloud
  pull-requests:
    "**":
      - step: *build-test-sonarcloud
      - step: *check-quality-gate-sonarcloud